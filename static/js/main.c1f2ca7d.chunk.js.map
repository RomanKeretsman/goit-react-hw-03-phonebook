{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleFormSubmit","preventDefault","props","onSubmit","reset","this","className","styles","formLabel","formText","formInput","type","placeholder","onChange","formBtn","Component","ContactItem","contact","onDeleteContact","id","phoneNumber","href","aria-label","contactBtn","onClick","ContactList","contacts","length","notification","map","defaultProps","Filter","filter","onChangeFilter","filterLabel","filterText","filterInput","Container","children","container","App","addNewContact","randomID","find","alert","handleChangeFilter","getContactsToShow","toLowerCase","includes","handleDeleteContact","prevState","localStorage","getItem","parcedContacts","JSON","parse","prevProps","setItem","stringify","contactsToShow","phoneBookWrapper","title","contactsWrapper","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f2ca7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__OairO\",\"formInput\":\"ContactForm_formInput__1WgJ5\",\"formBtn\":\"ContactForm_formBtn__2g3l4\",\"formLabel\":\"ContactForm_formLabel__331S1\",\"formText\":\"ContactForm_formText__AZzAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__rtaI0\",\"ContactItem\":\"ContactList_ContactItem__2R2FO\",\"contactBtn\":\"ContactList_contactBtn__3cKsG\",\"phoneNumber\":\"ContactList_phoneNumber__HfvCM\",\"notification\":\"ContactList_notification__zMBob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookWrapper\":\"App_phoneBookWrapper__22Yn9\",\"contactsWrapper\":\"App_contactsWrapper__198V_\",\"title\":\"App_title__2hIKK\",\"titleContacts\":\"App_titleContacts__2ggVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__20ShM\",\"filterText\":\"Filter_filterText__3d8Jh\",\"filterInput\":\"Filter_filterInput__3kim1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__nG_pb\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.ContactForm} onSubmit={this.handleFormSubmit}>\r\n        <label className={styles.formLabel}>\r\n          <span className={styles.formText}>Name</span>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            placeholder=\"Enter contact's name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          <span className={styles.formText}>Number</span>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"tel\"\r\n            placeholder=\"Enter contact's number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.formBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.scss';\r\n\r\nconst ContactItem = ({ contact, onDeleteContact }) => {\r\n  const { id, name, number } = contact;\r\n\r\n  return (\r\n    <li className={styles.ContactItem}>\r\n      <span>\r\n        {name}:\r\n        <a\r\n          className={styles.phoneNumber}\r\n          href={'tel:' + number}\r\n          aria-label=\"Call\"\r\n        >\r\n          {number}\r\n        </a>\r\n      </span>\r\n      <button className={styles.contactBtn} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from './ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) =>\r\n  contacts.length === 0 ? (\r\n    <p className={styles.notification}>Contact book is empty</p>\r\n  ) : (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(contact => {\r\n        const { id } = contact;\r\n\r\n        return (\r\n          <ContactItem\r\n            key={id}\r\n            contact={contact}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\nContactList.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.scss';\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <label className={styles.filterLabel}>\r\n    <span className={styles.filterText}>Find contacts by name</span>\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      placeholder=\"Enter contact's name\"\r\n      value={filter}\r\n      onChange={onChangeFilter}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.scss';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import { Component } from 'react';\r\nimport { v4 as randomID } from 'uuid';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport Container from './components/Container';\r\n\r\nimport styles from './App.module.scss';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parcedContacts = JSON.parse(contacts);\r\n    if (parcedContacts) {\r\n      this.setState({\r\n        contacts: parcedContacts,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addNewContact = (name, number) => {\r\n    const contact = {\r\n      id: randomID(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const { contacts } = this.state;\r\n\r\n    if (!name || !number) {\r\n      alert('Please enter the correct name and number');\r\n      return;\r\n    }\r\n\r\n    contacts.find(({ name }) => name === contact.name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState(({ contacts }) => ({\r\n          contacts: [contact, ...contacts],\r\n        }));\r\n  };\r\n\r\n  handleChangeFilter = event => {\r\n    this.setState({\r\n      filter: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  getContactsToShow = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  handleDeleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const contactsToShow = this.getContactsToShow();\r\n\r\n    return (\r\n      <Container>\r\n        <div className={styles.phoneBookWrapper}>\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n          <ContactForm onSubmit={this.addNewContact} />\r\n        </div>\r\n        <div className={styles.contactsWrapper}>\r\n          <h2 className={styles.titleContacts}>Contacts</h2>\r\n          <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\r\n          <ContactList\r\n            contacts={contactsToShow}\r\n            onDeleteContact={this.handleDeleteContact}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}